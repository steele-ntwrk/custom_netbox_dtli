services:
  netbox:
    build: .
    image: ghcr.io/steele-ntwrk/custom-netbox-dtli:offline 
    container_name: netbox
    restart: unless-stopped
    env_file:
      - ./netbox.env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./devicetype-library:/data/devicetype-library:ro
      - ./reports:/opt/netbox/netbox/reports
      - ./scripts:/opt/netbox/netbox/scripts
      - ./netbox-media:/opt/netbox/netbox/media
      - ./dtli.env:/opt/dtli/.env:ro
      - ./configuration/plugins.py:/etc/netbox/config/plugins.py
      - ./configuration/configuration.py:/etc/netbox/config/configuration.py
#     - ./certspath:/etc/ssl/certs/ca-bundle.crt #changeme
    networks:
      LabDocker:
        ipv4_address: IP_ADDRESS_OF_NETBOX

  netbox-worker:
    image: ghcr.io/steele-ntwrk/custom-netbox-dtli:offline 
    container_name: netbox-worker
    restart: unless-stopped
    env_file:
      - ./netbox.env
    depends_on:
      - netbox
    command: /opt/netbox/venv/bin/python /opt/netbox/netbox/manage.py rqworker
    networks:
      LabDocker:
        ipv4_address: IP_ADDRESS_OF_NETBOX_WORKER

  netbox-housekeeping:
    image: ghcr.io/steele-ntwrk/custom-netbox-dtli:offline
    container_name: netbox-housekeeping
    restart: unless-stopped
    env_file:
      - ./netbox.env
    depends_on:
      - netbox
    command: /opt/netbox/housekeeping.sh
    networks:
      LabDocker:
        ipv4_address: IP_ADDRESS_OF_NETBOX_HOUSEKEEPING

  postgres:
    image: postgres:15
    container_name: netbox-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: netbox
      POSTGRES_USER: netbox
      POSTGRES_PASSWORD: netbox
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      LabDocker:
        ipv4_address: IP_ADDRESS_OF_POSTGRESQL_SERVER

  redis:
    image: redis:7
    container_name: netbox-redis
    restart: unless-stopped
    networks:
      LabDocker:
        ipv4_address: IP_ADDRESS_OF_REDIS_SERVER

volumes:
  netbox-media:
    driver: local
  postgres-data:
    driver: local

networks:
  LabDocker:
    external: true
